#Real-Time Device Tracking Map

This project is a real-time device tracking application that uses Node.js, Express, Socket.io, and Leaflet to visualize user locations on a map. It continuously updates the location of connected users, displaying their positions in real-time.

#Features

Real-time tracking of device locations using WebSockets.
Map visualization with Leaflet and OpenStreetMap tiles.
High-accuracy geolocation with continuous position updates.
Custom markers for each user on the map.

#Prerequisites

Node.js and npm installed
Internet connection (for OpenStreetMap tiles)
Installation

#Clone the repository:

bash
Copy code
git clone https://github.com/dhruv0111/Real-Time-Device-Tracking-Map
cd your-repo

#Install dependencies:


npm install
Start the server:

node app.js
The server should now be running on http://localhost:3000.

Project Setup:
Steps
Check browser support for geolocation:
Verify if the browser supports geolocation. Set options for high accuracy, a 5-second timeout, and no caching.

Continuous location tracking:
Use the watchPosition method to continuously track the user's location.

Send location data via Socket.io:
Emit the user's latitude and longitude through the send-location event. Log errors in the console, if any.

Map initialization:

Initialize a Leaflet map centered at coordinates (0, 0) with a zoom level of 15.
Add OpenStreetMap tiles to the map.
Marker management:

Create an empty object to store user markers.
When location data is received via Socket.io, extract the ID, latitude, and longitude.
Center the map on the new coordinates.
Dynamic marker updates:

If a marker with the given ID already exists, update its position.
If no marker exists, create a new one and add it to the map.
Remove a user's marker if they disconnect.
Usage
Open the app in a browser that supports geolocation.
The app will request permission to access your location.
Upon approval, your location will be sent to the server and displayed on the map.
Multiple users can connect, and each user's position will be updated in real-time.
Technologies Used
Node.js: Backend server
Express: Web framework for Node.js
Socket.io: Real-time bidirectional event-based communication
Leaflet.js: Interactive map display
OpenStreetMap: Map tiles
Screenshots

Description of the screenshot: Real-time tracking of devices shown on a map.

Future Enhancements
Add support for different map styles or satellite view.
Include clustering for multiple users in close proximity.
Add customizable user markers or avatars.
License
This project is licensed under the MIT License.

